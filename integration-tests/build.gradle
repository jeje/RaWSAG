dependencies {
    compile project(':netty-codecs')
    compile project(':netty-compiler')
    compile 'com.squareup.dagger:dagger:1.2.1'
    compile 'com.squareup.dagger:dagger-compiler:1.2.1'
    compile 'com.codahale.metrics:metrics-core:3.0.0-RC1'
    compile 'com.codahale.metrics:metrics-annotation:3.0.0-RC1'
    compile 'com.netflix.rxjava:rxjava-core:0.9.0'
    compile 'com.netflix.rxjava:rxjava-groovy:0.9.0'

    testCompile 'org.spockframework:spock-core:0.7-groovy-2.0'
}

compileJava {
    def destinationDir = project.tasks.jar.destinationDir
    project.mkdir destinationDir
    Map otherArgs = [
            includeAntRuntime: false,
            destdir: destinationDir,
            classpath: project.configurations.compile.asPath,
            sourcepath: '',
            target: project.targetCompatibility,
            source: project.sourceCompatibility
    ]
    options.compilerArgs = [
            '-processor', 'com.kalixia.grapi.apt.jaxrs.StaticAnalysisCompiler',
            '-s', "${destinationDir.absolutePath}".toString()
    ]
    Map antOptions = otherArgs + options.optionMap()
//    project.ant.javac(antOptions) {
//        source.addToAntBuilder(project.ant, 'src', FileCollection.AntType.MatchingTask)
//        options.compilerArgs.each { value ->
//            compilerarg(value: value)
//        }
//    }
}